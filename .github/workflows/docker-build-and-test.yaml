name: Build and test docker environment

on:
   push:
      paths-ignore:
         - '**.md'
         - 'docs/**'
   pull_request:
      paths-ignore:
         - '**.md'
         - 'docs/**'

env:
   WORK: ${{ github.workspace }}
   WORK_DOCKER: '/home/docker'
   DOCKER_IMAGE_NAME: 'bitextor/bitextor'

jobs:
   docker_build_testing:
      name: Build and testing
      runs-on: ubuntu-20.04
      timeout-minutes: 360
      steps:
      -  uses: actions/checkout@v3
         with:
            submodules: 'recursive'
      -  name: Docker image tag
         id: image_tag
         run: |
            # Provided name and short SHA
            tag="${{ env.DOCKER_IMAGE_NAME }}:${GITHUB_SHA:0:7}"

            echo "Tag: $tag"
            echo "::set-output name=tag::$tag"
      -  name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v2
      -  name: Test docker
         run: |
            docker pull hello-world > /dev/null
            docker run --rm hello-world > /dev/null
      -  name: Build image
         run: |
            docker build --rm --tag "${{ steps.image_tag.outputs.tag }}" .
      -  name: Info
         run: |
            df -h
            docker image ls -a --digests || >&2 echo "WARNING: could not run 'docker image ls'"
            docker buildx du --verbose || >&2 echo "WARNING: could not run 'docker buildx du'"
      -  name: Run
         run: |
            mkdir "${WORK}/docker-volume"

            # Run tests with docker
            docker_exit_code=$(
            docker run \
               -e CI="$CI" \
               -v "${WORK}/docker-volume:${WORK_DOCKER}/volume" \
               --name bitextor \
               --entrypoint /bin/bash --rm \
               "${{ steps.image_tag.outputs.tag }}" \
               -c 'bitextor/tests/run-tests-min.sh -j 4; \
                   cp -f '"${WORK_DOCKER}/data/fails.log"' '"${WORK_DOCKER}/volume"' && \
                   rm -rf '"${WORK_DOCKER}/volume/reports"' && \
                   cp -r '"${WORK_DOCKER}/reports"' '"${WORK_DOCKER}/volume"' && \
                   cp -r '"${WORK_DOCKER}/permanent"' '"${WORK_DOCKER}/volume"'' \
               &> ./tests_output \
               && echo $? || echo $?)

            if [[ "$docker_exit_code" != "0" ]]; then
               >&2 echo "WARNING: something went wrong while tests were running"
            fi

            cat ./tests_output

            # Has the execution failed?
            nolines=$(cat ${WORK}/docker-volume/fails.log | wc -l)

            [[ "$nolines" != "0" ]] && exit "$nolines" || true
      -  name: Print log of tests which failed
         # https://github.com/actions/runner/issues/1173
         #if: ${{ steps.tests.conclusion != 'success' }} # Will this work with matrix as expected (i.e. affect just the specific job and not the rest)?
         if: ${{ always() }}
         run: |
            if [[ -f "${WORK}/docker-volume/fails.log" ]]; then
               while read line; do
                  IFS=$'\t' read -r -a array <<< "$line"
                  status=${array[0]}
                  notest=${array[1]}
                  exit_code=${array[2]}

                  str="# Test $notest (exit code / desc.: $exit_code) #"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"
                  echo "$str"
                  eval $(echo printf '"#%0.s"' {1..${#str}}) && printf "\n"

                  report_file="${WORK}/docker-volume/reports/${notest}.report"

                  if [[ -f "$report_file" ]]; then
                     awk -v prefix="(log test $notest)" '{print prefix" "$0}' "$report_file"
                  else
                     echo "(warning) No report file found for test $notest (this might be normal depending on the test; check the description)"
                  fi

                  echo ""
               done < "${WORK}/docker-volume/fails.log"
            else
               >&2 echo "ERROR: could not find the file with the detailed fails"
            fi
      -  name: Upload sent.gz files (artifacts)
         if: ${{ always() }}
         uses: actions/upload-artifact@v3
         with:
            name: all-sent.gz
            path: ${{ env.WORK }}/docker-volume/permanent/**/*.sent.gz
      -  name: Upload report files (artifacts)
         if: ${{ always() }}
         uses: actions/upload-artifact@v3
         with:
            name: reports
            path: ${{ env.WORK }}/docker-volume/reports/*.report
