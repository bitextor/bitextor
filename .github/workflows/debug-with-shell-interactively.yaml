name: Debug with shell interactively

on:
   # Only run this workflow with 'workflow_dispatch'
   workflow_dispatch:
      inputs:
         timeout:
            type: number
            description: 'Time (min) which the session will be available'
            required: false
            default: 60
         install_bitextor:
            type: boolean
            description: 'Install bitextor'
            default: true
         run_tests:
            type: boolean
            description: 'Run bitextor tests'
            default: false
         ref:
            description: 'Ref to use when Bitextor is built (i.e. branch, tag or commit)'
            default: 'master'

env:
   WORK: ${{ github.workspace }}

jobs:
   interactive_shell:
      runs-on: ubuntu-20.04
      steps:
      -  name: Install required linux packages
         if: ${{ github.event.inputs.install_bitextor == 'true' }}
         run: |
            sudo apt-get --assume-yes update
            sudo apt-get --assume-yes install cmake automake liblzma-dev time poppler-utils libboost-all-dev pkg-config curl git pigz wget zlib1g zlib1g-dev libgoogle-perftools-dev libsparsehash-dev coreutils uchardet libuchardet-dev libzip-dev libhunspell-dev hunspell-fr
      -  name: Set up Python3
         if: ${{ github.event.inputs.install_bitextor == 'true' }}
         uses: actions/setup-python@v2
         with:
            python-version: '3.8.5'
            architecture: 'x64'
      -  name: Install Python dev tools
         if: ${{ github.event.inputs.install_bitextor == 'true' }}
         run: |
            pip3 install --upgrade pip
            sudo apt-get --assume-yes install python3-venv python3-setuptools
            pip3 install Cython
      -  name: Set up JDK
         if: ${{ github.event.inputs.install_bitextor == 'true' }}
         uses: actions/setup-java@v1
         with:
            java-version: 8
            java-package: jdk
            architecture: x64
      -  uses: actions/checkout@v3
         if: ${{ github.event.inputs.install_bitextor == 'true' }}
         with:
            submodules: 'recursive'
            ref: ${{ github.event.inputs.ref }}
      -  name: Install additional python requirements
         if: ${{ github.event.inputs.install_bitextor == 'true' }}
         run: |
            pip3 install .[all]
            pip3 install ./third_party/bicleaner
            pip3 install ./third_party/bicleaner-ai
            pip3 install ./third_party/kenlm --install-option="--max_order 7"
            pip3 install ./third_party/bifixer
            pip3 install ./third_party/biroamer
            python3 -c "from flair.models import SequenceTagger; SequenceTagger.load('flair/ner-english-fast')"
            pip3 install ./third_party/neural-document-aligner
            pip3 install ./third_party/vecalign
      -  name: Setup golang
         if: ${{ github.event.inputs.install_bitextor == 'true' }}
         uses: actions/setup-go@v2
         with:
            go-version: 1.17.3
      -  name: Install giashard
         if: ${{ github.event.inputs.install_bitextor == 'true' }}
         run: |
            go install github.com/paracrawl/giashard/cmd/giashard@latest
      -  name: Compiling bitextor and submodules
         if: ${{ github.event.inputs.install_bitextor == 'true' }}
         run: |
            mkdir build_cmake && cd build_cmake
            cmake -DCMAKE_INSTALL_PREFIX=/usr ..
            make -j
            sudo make install
      -  name: Run tests
         if: ${{ github.event.inputs.install_bitextor == 'true' && github.event.inputs.run_tests == 'true' }}
         id: tests
         run: |
            chmod 775 ./tests/run-tests-min.sh
            ./tests/run-tests-min.sh -w "$WORK" -j 4
      -  name: Setup tmate session
         if: ${{ always() }}
         uses: mxschmitt/action-tmate@v3
         timeout-minutes: ${{ fromJSON(github.event.inputs.timeout) }}
